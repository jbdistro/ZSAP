REPORT z_fues_role_user_tran.

TABLES: agr_define, agr_users, agr_tcodes, agr_1251, usr02, zacc_level_map.

*---------------------------------------------------------------*
* Textos constantes en espaÃ±ol
*---------------------------------------------------------------*
CONSTANTS: c_tab1 TYPE string VALUE 'Rol-Usuario',
           c_tab2 TYPE string VALUE 'Rol-Transacci\u00f3n',
           c_tab3 TYPE string VALUE 'Rol-Trans.-Aut.-Usu.'.

TYPES: BEGIN OF ty_role_user,
         rol      TYPE agr_define-agr_name,
         usuario  TYPE xubname,
         grupo    TYPE usr02-class,
         desde    TYPE agr_users-from_dat,
         hasta    TYPE agr_users-to_dat,
         inactrol TYPE c LENGTH 1,
         inactusu TYPE c LENGTH 1,
       END OF ty_role_user.

TYPES: BEGIN OF ty_role_trans,
         rol    TYPE agr_define-agr_name,
         tcode  TYPE tcode,
         texto  TYPE tstct-ttext,
         nivel  TYPE zacc_level_map-acc_level,
       END OF ty_role_trans.

TYPES: BEGIN OF ty_auth_user,
         rol    TYPE agr_define-agr_name,
         tcode  TYPE tcode,
         texto  TYPE tstct-ttext,
         objeto TYPE agr_1251-object,
         campo  TYPE agr_1251-field,
         valor  TYPE agr_1251-low,
         usuario TYPE xubname,
         nivel  TYPE zacc_level_map-acc_level,
       END OF ty_auth_user.

*---------------------------------------------------------------*
* Declaraci\u00f3n de bloques tabulados
*---------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF TABBED BLOCK tabs FOR 15 LINES.
  SELECTION-SCREEN TAB (20) tabs-user  USER-COMMAND pus1 DEFAULT SCREEN 100.
  SELECTION-SCREEN TAB (20) tabs-tran  USER-COMMAND pus2 DEFAULT SCREEN 200.
  SELECTION-SCREEN TAB (20) tabs-auth  USER-COMMAND pus3 DEFAULT SCREEN 300.
SELECTION-SCREEN END OF BLOCK tabs.

*--- Vista Rol-Usuario ------------------------------------------------*
SELECTION-SCREEN BEGIN OF SCREEN 100 AS SUBSCREEN.
  SELECT-OPTIONS: s_role FOR agr_define-agr_name,
                  s_user FOR usr02-bname,
                  s_group FOR usr02-class.
  PARAMETERS: p_ruser  AS CHECKBOX DEFAULT 'X' MODIF ID rusr,
              p_rnousr AS CHECKBOX MODIF ID rusr,
              p_urole  AS CHECKBOX DEFAULT 'X' MODIF ID urol,
              p_unorol AS CHECKBOX MODIF ID urol.
SELECTION-SCREEN END OF SCREEN 100.

*--- Vista Rol-Transacci\u00f3n --------------------------------------*
SELECTION-SCREEN BEGIN OF SCREEN 200 AS SUBSCREEN.
  SELECT-OPTIONS: s_role2  FOR agr_define-agr_name,
                  s_tcode2 FOR agr_tcodes-tcode.
  PARAMETERS: p_oneusr2 AS CHECKBOX USER-COMMAND ch2.
  PARAMETERS: p_user2   TYPE xubname MODIF ID su2.
  SELECT-OPTIONS: s_user2 FOR usr02-bname MODIF ID mu2.
SELECTION-SCREEN END OF SCREEN 200.

*--- Vista Rol-Trans-Auth-Usr ---------------------------------------*
SELECTION-SCREEN BEGIN OF SCREEN 300 AS SUBSCREEN.
  SELECT-OPTIONS: s_role3  FOR agr_define-agr_name,
                  s_tcode3 FOR agr_tcodes-tcode,
                  s_obj3   FOR agr_1251-object.
  PARAMETERS: p_oneusr3 AS CHECKBOX USER-COMMAND ch3.
  PARAMETERS: p_user3   TYPE xubname MODIF ID su3.
SELECTION-SCREEN END OF SCREEN 300.

*---------------------------------------------------------------*
* L\u00f3gica de mutua exclusividad y MODIF IDs
*---------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'P_RUSER'.
        IF p_rnousr = 'X'.
          screen-input = 0.
          p_ruser = ' '.
        ELSE.
          screen-input = 1.
        ENDIF.
      WHEN 'P_RNOUSR'.
        IF p_ruser = 'X'.
          screen-input = 0.
          p_rnousr = ' '.
        ELSE.
          screen-input = 1.
        ENDIF.
      WHEN 'P_UROLE'.
        IF p_unorol = 'X'.
          screen-input = 0.
          p_urole = ' '.
        ELSE.
          screen-input = 1.
        ENDIF.
      WHEN 'P_UNOROL'.
        IF p_urole = 'X'.
          screen-input = 0.
          p_unorol = ' '.
        ELSE.
          screen-input = 1.
        ENDIF.
      WHEN 'P_USER2' OR 'S_USER2-LOW' OR 'S_USER2-HIGH'.
        IF p_oneusr2 = 'X'.
          IF screen-group1 = 'MU2'.
            screen-active = 0.
          ELSEIF screen-name = 'P_USER2'.
            screen-active = 1.
          ENDIF.
        ELSE.
          IF screen-group1 = 'MU2'.
            screen-active = 1.
          ELSEIF screen-name = 'P_USER2'.
            screen-active = 0.
          ENDIF.
        ENDIF.
      WHEN 'P_USER3'.
        IF p_oneusr3 = 'X'.
          screen-active = 1.
        ELSE.
          screen-active = 0.
          p_user3 = ''.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.

*---------------------------------------------------------------*
* Clase principal
*---------------------------------------------------------------*
CLASS lcl_main DEFINITION.
  PUBLIC SECTION.
    METHODS: run,
             show_role_user,
             show_role_trans,
             show_auth_user.
  PRIVATE SECTION.
    METHODS: select_role_user,
             select_role_trans,
             select_auth_user,
             add_acc_level CHANGING ct_tab TYPE STANDARD TABLE.
    DATA: gt_role_user  TYPE TABLE OF ty_role_user,
          gt_role_trans TYPE TABLE OF ty_role_trans,
          gt_auth_user  TYPE TABLE OF ty_auth_user.
ENDCLASS.

CLASS lcl_main IMPLEMENTATION.
  METHOD run.
    CASE tabs-activetab.
      WHEN 'PUS1'.
        select_role_user( ).
        show_role_user( ).
      WHEN 'PUS2'.
        select_role_trans( ).
        show_role_trans( ).
      WHEN 'PUS3'.
        select_auth_user( ).
        show_auth_user( ).
    ENDCASE.
  ENDMETHOD.

  METHOD select_role_user.
    CLEAR gt_role_user.
    SELECT a~agr_name AS rol,
           u~bname    AS usuario,
           u~class    AS grupo,
           r~from_dat AS desde,
           r~to_dat   AS hasta,
           CASE WHEN r~from_dat > sy-datum OR r~to_dat < sy-datum
                THEN 'X' ELSE ' ' END AS inactrol,
           CASE WHEN u~gltgv <> '00000000' AND u~gltgv < sy-datum
                THEN 'X' ELSE ' ' END AS inactusu
      FROM agr_define AS a
      INNER JOIN agr_users AS r ON a~agr_name = r~agr_name
      LEFT JOIN usr02 AS u ON u~bname = r~uname
      WHERE a~agr_name IN @s_role
        AND r~uname    IN @s_user
        AND u~class    IN @s_group
      INTO TABLE @gt_role_user
      UP TO 10000 ROWS.
    IF gt_role_user IS INITIAL AND p_rnousr = space AND p_unorol = space.
      MESSAGE 'No se encontraron datos' TYPE 'I'.
    ENDIF.
  ENDMETHOD.

  METHOD select_role_trans.
    CLEAR gt_role_trans.
    SELECT a~agr_name AS rol,
           t~tcode    AS tcode,
           s~ttext    AS texto,
           z~acc_level AS nivel
      FROM agr_tcodes AS t
      INNER JOIN agr_define AS a ON a~agr_name = t~agr_name
      LEFT JOIN tstct AS s ON s~tcode = t~tcode AND s~sprsl = @sy-langu
      LEFT JOIN zacc_level_map AS z ON z~tcode = t~tcode
      WHERE a~agr_name IN @s_role2
        AND t~tcode    IN @s_tcode2
      INTO TABLE @gt_role_trans
      UP TO 10000 ROWS.

    IF p_oneusr2 = 'X' AND p_user2 IS NOT INITIAL.
      SELECT agr_name FROM agr_users
        INTO TABLE @DATA(lt_valid)
        WHERE agr_name IN @s_role2 AND uname = @p_user2
        UP TO 5000 ROWS.
      DELETE gt_role_trans WHERE rol NOT IN lt_valid.
    ELSEIF p_oneusr2 = space AND s_user2[] IS NOT INITIAL.
      SELECT agr_name FROM agr_users
        INTO TABLE lt_valid
        WHERE agr_name IN @s_role2 AND uname IN @s_user2
        UP TO 5000 ROWS.
      DELETE gt_role_trans WHERE rol NOT IN lt_valid.
    ENDIF.
  ENDMETHOD.

  METHOD select_auth_user.
    CLEAR gt_auth_user.
    DATA lt_users TYPE TABLE OF xubname.
    IF p_oneusr3 = 'X' AND p_user3 IS NOT INITIAL.
      APPEND p_user3 TO lt_users.
    ENDIF.

    SELECT a~agr_name AS rol,
           t~tcode    AS tcode,
           s~ttext    AS texto,
           au~object  AS objeto,
           au~field   AS campo,
           au~low     AS valor,
           u~uname    AS usuario,
           z~acc_level AS nivel
      FROM agr_tcodes AS t
      INNER JOIN agr_define AS a ON a~agr_name = t~agr_name
      LEFT JOIN tstct AS s ON s~tcode = t~tcode AND s~sprsl = @sy-langu
      INNER JOIN agr_1251 AS au ON au~agr_name = a~agr_name
      LEFT JOIN zacc_level_map AS z ON z~tcode = t~tcode
      LEFT JOIN agr_users AS u ON u~agr_name = a~agr_name
      WHERE a~agr_name IN @s_role3
        AND t~tcode    IN @s_tcode3
        AND au~object  IN @s_obj3
      INTO TABLE @gt_auth_user
      UP TO 10000 ROWS.

    IF lt_users IS NOT INITIAL.
      DELETE gt_auth_user WHERE usuario NOT IN lt_users.
    ENDIF.
  ENDMETHOD.

  METHOD add_acc_level.
    LOOP AT ct_tab ASSIGNING FIELD-SYMBOL(<lfs>).
      SELECT SINGLE acc_level INTO <lfs>-nivel
        FROM zacc_level_map
        WHERE tcode = @<lfs>-tcode.
    ENDLOOP.
  ENDMETHOD.

  METHOD show_role_user.
    DATA(lo_alv) = cl_salv_table=>factory( r_container = cl_gui_container=>screen0
                                           t_table      = gt_role_user ).
    DATA(lo_cols) = lo_alv->get_columns( ).
    TRY.
        lo_cols->get_column( 'ROL' )->set_medium_text( 'Rol' ).
        lo_cols->get_column( 'USUARIO' )->set_medium_text( 'Usuario' ).
        lo_cols->get_column( 'GRUPO' )->set_medium_text( 'Grupo' ).
        lo_cols->get_column( 'DESDE' )->set_medium_text( 'Desde' ).
        lo_cols->get_column( 'HASTA' )->set_medium_text( 'Hasta' ).
      CATCH cx_salv_not_found.
    ENDTRY.
    lo_cols->set_optimize( 'X' ).
    lo_alv->display( ).
  ENDMETHOD.

  METHOD show_role_trans.
    add_acc_level( CHANGING ct_tab = gt_role_trans ).
    DATA(lo_alv) = cl_salv_table=>factory( r_container = cl_gui_container=>screen0
                                           t_table      = gt_role_trans ).
    DATA(lo_cols) = lo_alv->get_columns( ).
    TRY.
        lo_cols->get_column( 'ROL' )->set_medium_text( 'Rol' ).
        lo_cols->get_column( 'TCODE' )->set_medium_text( 'Transacci\u00f3n' ).
        lo_cols->get_column( 'TEXTO' )->set_medium_text( 'Descripci\u00f3n' ).
        lo_cols->get_column( 'NIVEL' )->set_medium_text( 'Nivel' ).
      CATCH cx_salv_not_found.
    ENDTRY.
    lo_cols->set_optimize( 'X' ).
    lo_alv->display( ).
  ENDMETHOD.

  METHOD show_auth_user.
    add_acc_level( CHANGING ct_tab = gt_auth_user ).
    DATA(lo_alv) = cl_salv_table=>factory( r_container = cl_gui_container=>screen0
                                           t_table      = gt_auth_user ).
    DATA(lo_cols) = lo_alv->get_columns( ).
    TRY.
        lo_cols->get_column( 'ROL' )->set_medium_text( 'Rol' ).
        lo_cols->get_column( 'TCODE' )->set_medium_text( 'Transacci\u00f3n' ).
        lo_cols->get_column( 'OBJETO' )->set_medium_text( 'Objeto' ).
        lo_cols->get_column( 'CAMPO' )->set_medium_text( 'Campo' ).
        lo_cols->get_column( 'VALOR' )->set_medium_text( 'Valor' ).
        lo_cols->get_column( 'USUARIO' )->set_medium_text( 'Usuario' ).
        lo_cols->get_column( 'NIVEL' )->set_medium_text( 'Nivel' ).
      CATCH cx_salv_not_found.
    ENDTRY.
    lo_cols->set_optimize( 'X' ).
    lo_alv->display( ).
  ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.
  NEW lcl_main( )->run( ).

